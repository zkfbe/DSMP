{"name": "test_002", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: './temp/temp_pic.png'", "trace": "self = <TestCase.test_engine.TestAdmin object at 0x10220ecc0>\ndrivers = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"023ce7c708a2f9ac773d76b5215afcc1\")>\n\n    @allure.story('添加引擎用例')\n    def test_002(self,drivers):\n        \"\"\"添加引擎\"\"\"\n        engine=Engine(drivers)\n        with allure.step('切换至引擎管理页面'):\n            engine.click_setting_button()\n            engine.click_sysmange_button()\n            engine.click_enginemange_button()\n        with allure.step('点击添加引擎按钮'):\n            engine.click_engine_add_button()\n        with allure.step('填入相关信息'):\n            engine.input_engine_tool(ini.scaname)\n            engine.input_engine_name(ini.scanewname)\n            engine.input_engine_version(ini.scaversion)\n            engine.input_engine_protocol(ini.scaprotocol)\n            engine.input_engine_ip(ini.scaip)\n            engine.input_engine_port(ini.scaport)\n            engine.input_engine_ak(ini.scaak)\n            engine.input_engine_sk(ini.scask)\n        with allure.step('点击发送测试按钮'):\n            engine.click_send_test()\n        with allure.step('判断是否发送成功'):\n            text = engine.get_send_test_notice()\n            log.info(text)\n            assert text == '发送成功'\n>           save_pic(drivers)\n\ntest_engine.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../utils/picture_save.py:7: in save_pic\n    allure.attach.file(\"./temp/temp_pic.png\", attachment_type=allure.attachment_type.PNG)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py:203: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_pytest/listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py:513: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/shutil.py:475: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = './temp/temp_pic.png'\ndst = PosixPath('/Users/a1234/dsmp-selenium+pytest+allure/TestCase/report/result/a97046d1-43cd-4ff3-931e-ea9f3e8c1263-attachment.png')\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst in the most efficient way possible.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        sys.audit(\"shutil.copyfile\", src, dst)\n    \n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        file_size = 0\n        for i, fn in enumerate([src, dst]):\n            try:\n                st = _stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    fn = fn.path if isinstance(fn, os.DirEntry) else fn\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n                if _WINDOWS and i == 0:\n                    file_size = st.st_size\n    \n        if not follow_symlinks and _islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: './temp/temp_pic.png'\n\n/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/shutil.py:260: FileNotFoundError"}, "description": "添加引擎", "steps": [{"name": "切换至引擎管理页面", "status": "passed", "start": 1722925321302, "stop": 1722925324467}, {"name": "点击添加引擎按钮", "status": "passed", "start": 1722925324467, "stop": 1722925325517}, {"name": "填入相关信息", "status": "passed", "start": 1722925325517, "stop": 1722925331177}, {"name": "点击发送测试按钮", "status": "passed", "start": 1722925331177, "stop": 1722925332238}, {"name": "判断是否发送成功", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: './temp/temp_pic.png'\n", "trace": "  File \"/Users/a1234/dsmp-selenium+pytest+allure/TestCase/test_engine.py\", line 68, in test_002\n    save_pic(drivers)\n  File \"/Users/a1234/dsmp-selenium+pytest+allure/utils/picture_save.py\", line 7, in save_pic\n    allure.attach.file(\"./temp/temp_pic.png\", attachment_type=allure.attachment_type.PNG)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/_allure.py\", line 203, in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py\", line 513, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py\", line 120, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    raise exception.with_traceback(exception.__traceback__)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_pytest/listener.py\", line 256, in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/reporter.py\", line 160, in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_hooks.py\", line 513, in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_manager.py\", line 120, in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 139, in _multicall\n    raise exception.with_traceback(exception.__traceback__)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/pluggy/_callers.py\", line 103, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/site-packages/allure_commons/logger.py\", line 39, in report_attached_file\n    shutil.copy2(source, destination)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/shutil.py\", line 475, in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n  File \"/Library/Frameworks/Python.framework/Versions/3.12/lib/python3.12/shutil.py\", line 260, in copyfile\n    with open(src, 'rb') as fsrc:\n         ^^^^^^^^^^^^^^^\n"}, "attachments": [{"source": "a97046d1-43cd-4ff3-931e-ea9f3e8c1263-attachment.png", "type": "image/png"}], "start": 1722925332238, "stop": 1722925332365}], "attachments": [{"name": "log", "source": "053f0f3a-b7ff-4235-8372-2df8c074288f-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "c6a348d8-5592-44ec-9605-b45890fa2022-attachment.txt", "type": "text/plain"}], "start": 1722925321302, "stop": 1722925332371, "uuid": "7c81f099-5067-4571-bb85-44b8e6e711e7", "historyId": "bedd2698acf5c5d61a336295f2260fdb", "testCaseId": "bedd2698acf5c5d61a336295f2260fdb", "fullName": "TestCase.test_engine.TestAdmin#test_002", "labels": [{"name": "story", "value": "添加引擎用例"}, {"name": "feature", "value": "测试引擎管理功能"}, {"name": "parentSuite", "value": "TestCase"}, {"name": "suite", "value": "test_engine"}, {"name": "subSuite", "value": "TestAdmin"}, {"name": "host", "value": "1234s-MacBook-Air.local"}, {"name": "thread", "value": "94539-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCase.test_engine"}]}